version: '3.9'


services:
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "${KAFDROP_PORT}:${KAFDROP_PORT}"
    environment:
      KAFKA_BROKERCONNECT: "${KAFKA_BROKER_PATH}"
      JVM_OPTS: "-Xms16M -Xmx64M"
    networks:
      - default
    depends_on:
      - kafka

  my_parser:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "${APP_PORT}:${APP_PORT}"
    container_name: my_parser
    command:  bash -c "python my_parser/broker_consumer.py"
    depends_on:
      - mongo
      - zookeeper
      - kafka
      - kafdrop
    env_file:
      - ./.env
    networks:
      - default

  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    container_name: mongo
    volumes:
      - ./mongo_data:/data/db
    env_file:
      - ./.env
    networks:
      - default


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}'
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - '${KAFKA_PORT_1}:${KAFKA_PORT_1}'
      - '${KAFKA_PORT_2}:${KAFKA_PORT_2}'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: $KAFKA_ZOOKEEPER_CONNECT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_BROKER_PATH},PLAINTEXT_HOST://localhost:${KAFKA_PORT_2}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFIG_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    networks:
      - default

networks:
  default:
    external: true
    name: trading